version: '3.8'

networks:
  msdms-network:
    driver: bridge

services:
  frontend:
    image: lsmsgeneva/msdms-frontend:2.4.2
    container_name: msdms_frontend
    restart: "no"
    volumes:
      - client-build:/usr/app/client/build
    networks:
      - msdms-network
    command: [ "true" ]

  backend:
    image: lsmsgeneva/msdms-backend:2.4.2
    container_name: msdms_backend
    restart: always
    env_file:
      - .env
    volumes:
      - ./.env:/usr/app/.env
      - ./MSDMS_data/massbankFiles:/usr/app/data/massbankFiles
      - client-build:/usr/app/client/build
    depends_on:
      - postgredb
    networks:
      - msdms-network

  nginx:
    image: nginx:1.27.5
    container_name: msdms_nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./msdms.conf:/etc/nginx/conf.d/default.conf
      - client-build:/usr/app/client/build
    depends_on:
      - backend
    networks:
      - msdms-network

  postgredb:
    build: ./psql
    container_name: msdms_psql
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./MSDMS_data/pgdata:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - msdms-network

volumes:
  client-build:
